{"ast":null,"code":"import React,{useEffect,useMemo,useState}from\"react\";import{useTable}from\"react-table\";import{fetchCSVData2}from\"./data2\";import\"./DataTable.css\";// Import the custom CSS file\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function DataTable2(_ref){let{userSalespersonID}=_ref;const[data,setData]=useState([]);useEffect(()=>{const fetchData=async()=>{const csvData=await fetchCSVData2();// Filter data based on the user's salesperson ID\nconst filteredData=csvData.filter(row=>row.salesperson===userSalespersonID);setData(filteredData);};fetchData();},[userSalespersonID]);const columns=useMemo(()=>[{Header:\"Deal Number\",accessor:\"deal\"},{Header:\"Date\",accessor:\"date\"},{Header:\"Customer Name\",accessor:\"customer\"},{Header:\"Order Number\",accessor:\"order\"},{Header:\"Year\",accessor:\"year\"},{Header:\"Model\",accessor:\"model\"},{Header:\"Suffix\",accessor:\"suffix\"},{Header:\"Colour\",accessor:\"colour\"},{Header:\"Type\",accessor:\"type\"},// { Header: \"Salesperson\", accessor: \"salesperson\" },\n{Header:\"FSM\",accessor:\"fsm\"},{Header:\"Filled\",accessor:\"filled\"}],[userSalespersonID]// Include userSalespersonID in dependencies\n);const{getTableProps,getTableBodyProps,headerGroups,rows,prepareRow}=useTable({columns,data});return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"table\",{...getTableProps(),className:\"datatable\",children:[/*#__PURE__*/_jsx(\"thead\",{children:headerGroups.map(headerGroup=>/*#__PURE__*/_jsx(\"tr\",{...headerGroup.getHeaderGroupProps(),children:headerGroup.headers.map(column=>/*#__PURE__*/_jsx(\"th\",{...column.getHeaderProps(),children:column.render(\"Header\")}))}))}),/*#__PURE__*/_jsx(\"tbody\",{...getTableBodyProps(),children:rows.map(row=>{prepareRow(row);return/*#__PURE__*/_jsx(\"tr\",{...row.getRowProps(),children:row.cells.map(cell=>/*#__PURE__*/_jsx(\"td\",{...cell.getCellProps(),children:cell.render(\"Cell\")}))});})})]})});}","map":{"version":3,"names":["React","useEffect","useMemo","useState","useTable","fetchCSVData2","jsx","_jsx","jsxs","_jsxs","DataTable2","_ref","userSalespersonID","data","setData","fetchData","csvData","filteredData","filter","row","salesperson","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","children","className","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps"],"sources":["/Users/harinderlabana/Code/eta-buddy-dev/src/DataTable2.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport { useTable } from \"react-table\";\nimport { fetchCSVData2 } from \"./data2\";\nimport \"./DataTable.css\"; // Import the custom CSS file\n\nexport default function DataTable2({ userSalespersonID }) {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const csvData = await fetchCSVData2();\n      // Filter data based on the user's salesperson ID\n      const filteredData = csvData.filter(\n        (row) => row.salesperson === userSalespersonID\n      );\n      setData(filteredData);\n    };\n    fetchData();\n  }, [userSalespersonID]);\n\n  const columns = useMemo(\n    () => [\n      { Header: \"Deal Number\", accessor: \"deal\" },\n      { Header: \"Date\", accessor: \"date\" },\n      { Header: \"Customer Name\", accessor: \"customer\" },\n      { Header: \"Order Number\", accessor: \"order\" },\n      { Header: \"Year\", accessor: \"year\" },\n      { Header: \"Model\", accessor: \"model\" },\n      { Header: \"Suffix\", accessor: \"suffix\" },\n      { Header: \"Colour\", accessor: \"colour\" },\n      { Header: \"Type\", accessor: \"type\" },\n      // { Header: \"Salesperson\", accessor: \"salesperson\" },\n      { Header: \"FSM\", accessor: \"fsm\" },\n      { Header: \"Filled\", accessor: \"filled\" },\n    ],\n    [userSalespersonID] // Include userSalespersonID in dependencies\n  );\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n\n  return (\n    <div>\n      <table {...getTableProps()} className=\"datatable\">\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => (\n                  <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}