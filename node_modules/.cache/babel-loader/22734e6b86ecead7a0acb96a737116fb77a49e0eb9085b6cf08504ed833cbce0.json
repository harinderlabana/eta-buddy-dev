{"ast":null,"code":"var _jsxFileName = \"/Users/harinderlabana/Code/eta-buddy-dev/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Login from \"./Login\";\nimport DataTable from \"./DataTable\";\nimport \"./App.css\";\nimport { initGA, logPageView, logEvent, trackDailyVisits, trackUsageTime } from \"./analytics\"; // Import the Google Analytics functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  useEffect(() => {\n    initGA(); // Initialize Google Analytics\n    logPageView(); // Log the initial page view\n    trackDailyVisits(); // Track the daily visit\n    setStartTime(new Date()); // Set the start time for usage time tracking\n  }, []);\n  const userProfiles = [{\n    username: \"sunny.labana@redhilltoyota.ca\",\n    password: \"slabana007\",\n    firstName: \"Sunny\",\n    lastName: \"Labana\",\n    position: \"Sales Manager\",\n    ID: \"SL\"\n  }, {\n    username: \"darcy.gerrior@redhilltoyota.ca\",\n    password: \"Password1\",\n    firstName: \"Darcy\",\n    lastName: \"Gerrior\",\n    position: \"Sales Person\",\n    ID: \"DG\"\n  }, {\n    username: \"eunice.gallo@redhilltoyota.ca\",\n    password: \"egallo002\",\n    firstName: \"Eunice\",\n    lastName: \"Gallo\",\n    position: \"Sales Person\",\n    ID: \"EG\"\n  }, {\n    username: \"dave.bhogal@redhilltoyota.ca\",\n    password: \"dbhogal003\",\n    firstName: \"Dave\",\n    lastName: \"Bhogal\",\n    position: \"Sales Person\",\n    ID: \"DB\"\n  }, {\n    username: \"dan.petrie@redhilltoyota.ca\",\n    password: \"dpetrie004\",\n    firstName: \"Dan\",\n    lastName: \"Petrie\",\n    position: \"Sales Person\",\n    ID: \"DP\"\n  }, {\n    username: \"rick.neufeld@upperjamestoyota.ca\",\n    password: \"rneufeld005\",\n    firstName: \"Rick\",\n    lastName: \"Neufeld\",\n    position: \"Sales Person\",\n    ID: \"RN\"\n  }, {\n    username: \"kristian.carbone@redhilltoyota.ca\",\n    password: \"kcarbone006\",\n    firstName: \"Kristian\",\n    lastName: \"Carbone\",\n    position: \"Sales Person\",\n    ID: \"KC\"\n  }, {\n    username: \"marco.perrelli@redhilltoyota.ca\",\n    password: \"mperrelli009\",\n    firstName: \"Marco\",\n    lastName: \"Perrelli\",\n    position: \"Sales Person\",\n    ID: \"MP\"\n  }, {\n    username: \"saman.ahmed@redhilltoyota.ca\",\n    password: \"sahmed007\",\n    firstName: \"Saman\",\n    lastName: \"Ahmed\",\n    position: \"Sales Person\",\n    ID: \"SA\"\n  }];\n  const handleLogin = (username, password) => {\n    const userProfile = userProfiles.find(profile => profile.username === username && profile.password === password);\n    if (userProfile) {\n      setIsLoggedIn(true);\n      logEvent(\"User\", \"Login\"); // Log the login event\n    } else {\n      alert(\"Invalid credentials. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-heading\",\n        children: \"etaBuddy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"last-modified\",\n        children: \"Updated on November 14th 2023. Powered by Sorbet Solutions. \\uD83C\\uDF67\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nURZUZeth3gfV9fRQydzr1jyNNs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","DataTable","initGA","logPageView","logEvent","trackDailyVisits","trackUsageTime","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setIsLoggedIn","startTime","setStartTime","Date","userProfiles","username","password","firstName","lastName","position","ID","handleLogin","userProfile","find","profile","alert","className","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harinderlabana/Code/eta-buddy-dev/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Login from \"./Login\";\nimport DataTable from \"./DataTable\";\nimport \"./App.css\";\nimport {\n  initGA,\n  logPageView,\n  logEvent,\n  trackDailyVisits,\n  trackUsageTime,\n} from \"./analytics\"; // Import the Google Analytics functions\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n\n  useEffect(() => {\n    initGA(); // Initialize Google Analytics\n    logPageView(); // Log the initial page view\n    trackDailyVisits(); // Track the daily visit\n    setStartTime(new Date()); // Set the start time for usage time tracking\n  }, []);\n\n  const userProfiles = [\n    {\n      username: \"sunny.labana@redhilltoyota.ca\",\n      password: \"slabana007\",\n      firstName: \"Sunny\",\n      lastName: \"Labana\",\n      position: \"Sales Manager\",\n      ID: \"SL\",\n    },\n    {\n      username: \"darcy.gerrior@redhilltoyota.ca\",\n      password: \"Password1\",\n      firstName: \"Darcy\",\n      lastName: \"Gerrior\",\n      position: \"Sales Person\",\n      ID: \"DG\",\n    },\n    {\n      username: \"eunice.gallo@redhilltoyota.ca\",\n      password: \"egallo002\",\n      firstName: \"Eunice\",\n      lastName: \"Gallo\",\n      position: \"Sales Person\",\n      ID: \"EG\",\n    },\n    {\n      username: \"dave.bhogal@redhilltoyota.ca\",\n      password: \"dbhogal003\",\n      firstName: \"Dave\",\n      lastName: \"Bhogal\",\n      position: \"Sales Person\",\n      ID: \"DB\",\n    },\n    {\n      username: \"dan.petrie@redhilltoyota.ca\",\n      password: \"dpetrie004\",\n      firstName: \"Dan\",\n      lastName: \"Petrie\",\n      position: \"Sales Person\",\n      ID: \"DP\",\n    },\n    {\n      username: \"rick.neufeld@upperjamestoyota.ca\",\n      password: \"rneufeld005\",\n      firstName: \"Rick\",\n      lastName: \"Neufeld\",\n      position: \"Sales Person\",\n      ID: \"RN\",\n    },\n    {\n      username: \"kristian.carbone@redhilltoyota.ca\",\n      password: \"kcarbone006\",\n      firstName: \"Kristian\",\n      lastName: \"Carbone\",\n      position: \"Sales Person\",\n      ID: \"KC\",\n    },\n    {\n      username: \"marco.perrelli@redhilltoyota.ca\",\n      password: \"mperrelli009\",\n      firstName: \"Marco\",\n      lastName: \"Perrelli\",\n      position: \"Sales Person\",\n      ID: \"MP\",\n    },\n    {\n      username: \"saman.ahmed@redhilltoyota.ca\",\n      password: \"sahmed007\",\n      firstName: \"Saman\",\n      lastName: \"Ahmed\",\n      position: \"Sales Person\",\n      ID: \"SA\",\n    },\n  ];\n\n  const handleLogin = (username, password) => {\n    const userProfile = userProfiles.find(\n      (profile) =>\n        profile.username === username && profile.password === password\n    );\n\n    if (userProfile) {\n      setIsLoggedIn(true);\n      logEvent(\"User\", \"Login\"); // Log the login event\n    } else {\n      alert(\"Invalid credentials. Please try again.\");\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      {!isLoggedIn ? (\n        <Login onLogin={handleLogin} />\n      ) : (\n        <>\n          <h1 className=\"app-heading\">etaBuddy</h1>\n          <div className=\"last-modified\">\n            Updated on November 14th 2023. Powered by Sorbet Solutions. üçß\n          </div>\n          <DataTable />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}