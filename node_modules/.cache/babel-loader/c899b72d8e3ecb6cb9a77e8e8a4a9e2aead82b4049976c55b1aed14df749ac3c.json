{"ast":null,"code":"var _jsxFileName = \"/Users/harinderlabana/Code/eta-buddy-dev/src/DataTable2.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useTable } from \"react-table\";\nimport { fetchCSVData2 } from \"./data2\";\nimport \"./DataTable.css\"; // Import the custom CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DataTable2(_ref) {\n  _s();\n  let {\n    userSalespersonID\n  } = _ref;\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const csvData = await fetchCSVData2();\n      // Filter data based on the user's salesperson ID\n      const filteredData = csvData.filter(row => row.salesperson === userSalespersonID);\n      setData(filteredData);\n    };\n    fetchData();\n  }, [userSalespersonID]);\n  const columns = useMemo(() => [{\n    Header: \"Deal Number\",\n    accessor: \"deal\"\n  }, {\n    Header: \"Date\",\n    accessor: \"date\"\n  }, {\n    Header: \"Customer Name\",\n    accessor: \"customer\"\n  }, {\n    Header: \"ETA To\",\n    accessor: \"order\"\n  }, {\n    Header: \"Year\",\n    accessor: \"year\"\n  }, {\n    Header: \"Model\",\n    accessor: \"model\"\n  }, {\n    Header: \"Suffix\",\n    accessor: \"suffix\"\n  }, {\n    Header: \"Colour\",\n    accessor: \"colour\"\n  }, {\n    Header: \"Type\",\n    accessor: \"type\"\n  }, {\n    Header: \"Salesperson\",\n    accessor: \"salesperson\"\n  }, {\n    Header: \"FSM\",\n    accessor: \"fsm\"\n  }], [userSalespersonID] // Include userSalespersonID in dependencies\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      className: \"datatable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(DataTable2, \"YhGWXwjULbyufFhAsvks/rWG56U=\", false, function () {\n  return [useTable];\n});\n_c = DataTable2;\nvar _c;\n$RefreshReg$(_c, \"DataTable2\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","useTable","fetchCSVData2","jsxDEV","_jsxDEV","DataTable2","_ref","_s","userSalespersonID","data","setData","fetchData","csvData","filteredData","filter","row","salesperson","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","children","className","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","fileName","_jsxFileName","lineNumber","columnNumber","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/Users/harinderlabana/Code/eta-buddy-dev/src/DataTable2.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport { useTable } from \"react-table\";\nimport { fetchCSVData2 } from \"./data2\";\nimport \"./DataTable.css\"; // Import the custom CSS file\n\nexport default function DataTable2({ userSalespersonID }) {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const csvData = await fetchCSVData2();\n      // Filter data based on the user's salesperson ID\n      const filteredData = csvData.filter(\n        (row) => row.salesperson === userSalespersonID\n      );\n      setData(filteredData);\n    };\n    fetchData();\n  }, [userSalespersonID]);\n\n  const columns = useMemo(\n    () => [\n      { Header: \"Deal Number\", accessor: \"deal\" },\n      { Header: \"Date\", accessor: \"date\" },\n      { Header: \"Customer Name\", accessor: \"customer\" },\n      { Header: \"ETA To\", accessor: \"order\" },\n      { Header: \"Year\", accessor: \"year\" },\n      { Header: \"Model\", accessor: \"model\" },\n      { Header: \"Suffix\", accessor: \"suffix\" },\n      { Header: \"Colour\", accessor: \"colour\" },\n      { Header: \"Type\", accessor: \"type\" },\n      { Header: \"Salesperson\", accessor: \"salesperson\" },\n      { Header: \"FSM\", accessor: \"fsm\" },\n    ],\n    [userSalespersonID] // Include userSalespersonID in dependencies\n  );\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n\n  return (\n    <div>\n      <table {...getTableProps()} className=\"datatable\">\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => (\n                  <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}