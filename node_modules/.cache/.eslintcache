[{"/Users/harinderlabana/Code/eta-buddy-dev/src/index.js":"1","/Users/harinderlabana/Code/eta-buddy-dev/src/App.js":"2","/Users/harinderlabana/Code/eta-buddy-dev/src/reportWebVitals.js":"3","/Users/harinderlabana/Code/eta-buddy-dev/src/DataTable.js":"4","/Users/harinderlabana/Code/eta-buddy-dev/src/analytics.js":"5","/Users/harinderlabana/Code/eta-buddy-dev/src/Login.js":"6","/Users/harinderlabana/Code/eta-buddy-dev/src/data.js":"7","/Users/harinderlabana/Code/eta-buddy-dev/src/DataTable2.js":"8","/Users/harinderlabana/Code/eta-buddy-dev/src/data2.js":"9"},{"size":535,"mtime":1699984018258,"results":"10","hashOfConfig":"11"},{"size":3813,"mtime":1699995801240,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1699984018258,"results":"13","hashOfConfig":"11"},{"size":3299,"mtime":1699994230595,"results":"14","hashOfConfig":"11"},{"size":821,"mtime":1699984018257,"results":"15","hashOfConfig":"11"},{"size":1207,"mtime":1699984018257,"results":"16","hashOfConfig":"11"},{"size":295,"mtime":1699984018258,"results":"17","hashOfConfig":"11"},{"size":2205,"mtime":1699995748379,"results":"18","hashOfConfig":"11"},{"size":292,"mtime":1699991691304,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"etlff4",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/harinderlabana/Code/eta-buddy-dev/src/index.js",[],[],"/Users/harinderlabana/Code/eta-buddy-dev/src/App.js",["48","49","50"],[],"/Users/harinderlabana/Code/eta-buddy-dev/src/reportWebVitals.js",[],[],"/Users/harinderlabana/Code/eta-buddy-dev/src/DataTable.js",["51"],[],"import React, { useEffect, useState } from \"react\";\nimport { logEvent } from \"./analytics\"; // Import the logEvent function from analytics.js\nimport { useTable, useGlobalFilter } from \"react-table\";\nimport { fetchCSVData } from \"./data\";\nimport \"./DataTable.css\"; // Import the custom CSS file\n\nexport default function DataTable() {\n  const [data, setData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const csvData = await fetchCSVData();\n      setData(csvData);\n    };\n    fetchData();\n  }, []);\n\n  const columns = React.useMemo(\n    () => [\n      // Define your column headers here\n      // { Header: \"Order Number\", accessor: \"Order Number\" },\n      { Header: \"Customer Name\", accessor: \"Customer Name\" },\n      { Header: \"Status\", accessor: \"Status\" },\n      { Header: \"VIN\", accessor: \"VIN\" },\n      { Header: \"ETA From\", accessor: \"ETA From\" },\n      { Header: \"ETA To\", accessor: \"ETA To\" },\n      { Header: \"Year\", accessor: \"Model Year\" },\n      { Header: \"Model\", accessor: \"Model\" },\n      { Header: \"Suffix\", accessor: \"Suffix\" },\n      { Header: \"Colour\", accessor: \"Colour\" },\n      // Add more columns as needed\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setGlobalFilter,\n  } = useTable({ columns, data }, useGlobalFilter);\n\n  const handleSearch = (e) => {\n    const query = e.target.value;\n    setSearchQuery(query);\n    setGlobalFilter(query);\n    logEvent(\"Search\", \"Performed\"); // Track the search event in Google Analytics\n  };\n\n  const clearSearch = () => {\n    setSearchQuery(\"\");\n    logEvent(\"Search\", \"Cleared\"); // Track the search event in Google Analytics\n  };\n\n  const filteredRows = searchQuery\n    ? rows.filter((row, index) => index === 0 || row.isMatched)\n    : [];\n\n  return (\n    <div>\n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={handleSearch}\n          placeholder=\"Type your Order Number or Customer Name...\"\n          className=\"search-input\"\n        />\n      </div>\n      {searchQuery && filteredRows.length > 0 ? (\n        <table {...getTableProps()} style={{ width: \"100%\" }}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th {...column.getHeaderProps()}>\n                    {column.render(\"Header\")}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {filteredRows.map((row) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  ))}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      ) : (\n        searchQuery && (\n          <p className=\"no-results\">\n            Your order may be \"Pending Fullfilment\". Verify that your search is\n            entered correctly.\n          </p>\n        )\n      )}\n    </div>\n  );\n}\n","/Users/harinderlabana/Code/eta-buddy-dev/src/analytics.js",[],[],"/Users/harinderlabana/Code/eta-buddy-dev/src/Login.js",[],[],"/Users/harinderlabana/Code/eta-buddy-dev/src/data.js",[],[],"/Users/harinderlabana/Code/eta-buddy-dev/src/DataTable2.js",["52"],[],"/Users/harinderlabana/Code/eta-buddy-dev/src/data2.js",[],[],{"ruleId":"53","severity":1,"message":"54","line":13,"column":3,"nodeType":"55","messageId":"56","endLine":13,"endColumn":17},{"ruleId":"53","severity":1,"message":"57","line":18,"column":10,"nodeType":"55","messageId":"56","endLine":18,"endColumn":19},{"ruleId":"53","severity":1,"message":"58","line":20,"column":10,"nodeType":"55","messageId":"56","endLine":20,"endColumn":15},{"ruleId":"53","severity":1,"message":"59","line":53,"column":9,"nodeType":"55","messageId":"56","endLine":53,"endColumn":20},{"ruleId":"60","severity":1,"message":"61","line":35,"column":5,"nodeType":"62","endLine":35,"endColumn":24,"suggestions":"63"},"no-unused-vars","'trackUsageTime' is defined but never used.","Identifier","unusedVar","'startTime' is assigned a value but never used.","'data2' is assigned a value but never used.","'clearSearch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has an unnecessary dependency: 'userSalespersonID'. Either exclude it or remove the dependency array.","ArrayExpression",["64"],{"desc":"65","fix":"66"},"Update the dependencies array to be: []",{"range":"67","text":"68"},[1224,1243],"[]"]